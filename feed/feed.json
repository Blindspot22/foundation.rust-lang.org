{
  "version": "https://jsonfeed.org/version/1",
  "title": "Rust Foundation",
  "home_page_url": "https://foundation.rust-lang.org",
  "feed_url": "https://foundation.rust-lang.org/feed/feed.json",
  "description": "Official website of the Rust Foundation",
  "author": {
    "name": "The Rust Foundation",
    "url": "https://foundation.rust-lang.org"
  },
  "items": [{
      "id": "https://foundation.rust-lang.org/posts/2021-10-01-member-spotlight-parastate/",
      "url": "https://foundation.rust-lang.org/posts/2021-10-01-member-spotlight-parastate/",
      "title": "ParaState",
      "content_html": "<p><img src=\"/img/posts/2021-10-01-member-spotlight-parastate/member_spotlight_marco_chen.png\" alt=\"Brad Spengler Open Source Security\"></p>\n<p>The Rust Foundation is proud to work with a growing roster of exciting and innovative companies around the world. As we continue to grow, we’re working to shine the spotlight on each of our members and introduce them to the community. To that end, <a href=\"https://www.linkedin.com/in/marco-chen-239028a/\">Marco Chen</a>, co-founder of <a href=\"https://www.parastate.io/\">ParaState</a>, was kind enough to answer some of <a href=\"http://github.com/Mark-Simulacrum\">my</a> questions. Here’s what Marco had to say:</p>\n<h3 id=\"rousskov%3A-to-kick-things-off%2C-let%E2%80%99s-start-with-an-overview-of-parastate-and-what-you-do.\">Rousskov: To kick things off, let’s start with an overview of ParaState and what you do. <a class=\"direct-link\" href=\"#rousskov%3A-to-kick-things-off%2C-let%E2%80%99s-start-with-an-overview-of-parastate-and-what-you-do.\">#</a></h3>\n<p><strong>Chen</strong>: ParaState is a multi-chain, smart contract platform that bridges the application and developer ecosystem between Polkadot, Substrate and Ethereum, as well as other networks wanting to provide high-performance Ethereum compatibility. Parastate supports the Ethereum Virtual Machine (EVM) pallet, which provides seamless compatibility with all existing Ethereum applications. It also provides developers with a next-generation smart contract implementation environment, Ewasm.</p>\n<p>ParaState is proud to support more than 20 different programming languages to create Ethereum-compatible smart contracts, which we feel helps unite a larger community of developers to boost cross-chain interoperability. Earlier this year, ParaState officially launched its public testnet, Plato, which is currently running as a standalone Substrate blockchain. Plato is the first production-ready public testnet featuring both EVM and Ewasm.</p>\n<h3 id=\"rousskov%3A-tell-us-about-parastate%E2%80%99s-use-of-rust.-where-are-you-utilizing-it-and-how-do-you-expect-that-to-evolve%3F\">Rousskov: Tell us about ParaState’s use of Rust. Where are you utilizing it and how do you expect that to evolve? <a class=\"direct-link\" href=\"#rousskov%3A-tell-us-about-parastate%E2%80%99s-use-of-rust.-where-are-you-utilizing-it-and-how-do-you-expect-that-to-evolve%3F\">#</a></h3>\n<p><strong>Chen</strong>:  Rust is a very promising programming language in cloud and serverless computing sectors. All the latest new public chain projects like Polkadot, Near and Solana use Rust to write their infrastructure. ParaState aims to bring Rust into Ethereum compatible networks. We are working on launching a Rust software development kit (SDK) to enable developers to build applications with Rust on top of our infrastructure. It will be the first Rust SDK among all Ethereum compatible ecosystems. Right now, Solidity is the top programming language on Ethereum and has roughly 300K developers all over the world, but we expect to attract twice as many Rust developers to build with us in the blockchain industry.</p>\n<h3 id=\"rousskov%3A-what-was-parastate%E2%80%99s-motivation-to-join-the-rust-foundation%3F\">Rousskov: What was ParaState’s motivation to join the Rust Foundation? <a class=\"direct-link\" href=\"#rousskov%3A-what-was-parastate%E2%80%99s-motivation-to-join-the-rust-foundation%3F\">#</a></h3>\n<p><strong>Chen</strong>: The Rust Foundation is the official community for Rust developers around the world. As we expand our use of Rust we want to ensure we are a part of this leading organization and have the opportunity to help further the Foundation’s work and the use of Rust worldwide.</p>\n<h3 id=\"rousskov%3A-what-do-you-hope-the-rust-foundation-will-accomplish-in-the-months-and-years-ahead%3F\">Rousskov: What do you hope the Rust Foundation will accomplish in the months and years ahead? <a class=\"direct-link\" href=\"#rousskov%3A-what-do-you-hope-the-rust-foundation-will-accomplish-in-the-months-and-years-ahead%3F\">#</a></h3>\n<p><strong>Chen</strong>: Above all else, we’re hoping the Rust Foundation will help promote and further the growing Rust developer community all over the world and help shine a spotlight of some of the exciting work being done.</p>\n<p>To learn more about the Rust Foundation, and how we plan to fulfill some of the goals mentioned here, check out our <a href=\"https://foundation.rust-lang.org\">website</a>, <a href=\"https://www.youtube.com/watch?v=AI4lPN0BqGc\">introductory video</a> and <a href=\"https://foundation.rust-lang.org/posts/\">recent blog posts</a>, and follow us on <a href=\"https://twitter.com/rust_foundation\">Twitter</a> and <a href=\"https://www.linkedin.com/company/rust-foundation/\">LinkedIn</a> to stay up to date.</p>\n",
      "date_published": "2021-10-01T00:00:00Z"
    },{
      "id": "https://foundation.rust-lang.org/posts/2021-09-21-member-spotlight-open-source-security-software/",
      "url": "https://foundation.rust-lang.org/posts/2021-09-21-member-spotlight-open-source-security-software/",
      "title": "Open Source Security",
      "content_html": "<p><img src=\"/img/posts/2021-09-21-member-spotlight-open-source-security-software/member_spotlight_brad_spengler.png\" alt=\"Brad Spengler Open Source Security\"></p>\n<p>The Rust Foundation has been building some great momentum since our launch earlier this year, and we’re excited to share that our member roster is growing. Over the coming few months, we’ll be doing some deep dives with our new member companies so you can get to know our community a bit better. We’ll share some background on what they do, why they chose to join the Rust Foundation and what they hope to accomplish going forward.</p>\n<p>To kick things off, <a href=\"https://twitter.com/spendergrsec\">Brad Spengler</a>, president at <a href=\"https://opensrcsec.com/\">Open Source Security</a>, answered some of <a href=\"https://twitter.com/JoelMarcey\">my</a> questions. Here’s what he had to say:</p>\n<h3 id=\"marcey%3A-for-those-who-don%E2%80%99t-know%2C-tell-us-a-little-about-open-source-security.\">Marcey: For those who don’t know, tell us a little about Open Source Security. <a class=\"direct-link\" href=\"#marcey%3A-for-those-who-don%E2%80%99t-know%2C-tell-us-a-little-about-open-source-security.\">#</a></h3>\n<p><strong>Spengler</strong>: Open Source Security, Inc. develops and maintains grsecurity®, a secure drop-in replacement for the Linux kernel.  Our team has created the technologies behind DEP, ASLR, CFI, and many other defensive measures adopted in one form or another by all modern operating systems. We combine our deep expertise with swift and detailed support, acting as a trusted advisor and an extension of our customers' security and kernel engineering teams.</p>\n<p>Our primary customer base involves companies with products or services that require a higher level of security assurance for Linux than is typically available elsewhere, with a specific focus on the kernel itself. One obvious example is the web hosting industry, particularly in shared hosting, where one webapp compromise or fraudulent customer grants access to the attack surface of the Linux kernel.  A compromise of the kernel is capable of defeating nearly all other security in place, putting the sensitive information of other customers on the same system at risk.</p>\n<h3 id=\"marcey%3A-tell-us-about-open-source-security%E2%80%99s-use-of-rust.-how-are-you-using-it-currently-and-how-might-that-evolve%3F\">Marcey: Tell us about Open Source Security’s use of Rust. How are you using it currently and how might that evolve? <a class=\"direct-link\" href=\"#marcey%3A-tell-us-about-open-source-security%E2%80%99s-use-of-rust.-how-are-you-using-it-currently-and-how-might-that-evolve%3F\">#</a></h3>\n<p><strong>Spengler</strong>: We are interested in Rust, but are not (yet) using it ourselves in services offered to customers.  That will certainly change given that support for Rust is going to be merged in the upstream Linux kernel, and we believe it will be critical to more widespread adoption.  This is actually what led us to begin supporting (in collaboration with Embecosm) the full-time development of a GCC front-end for Rust last year, which we announced here: <a href=\"https://opensrcsec.com/open_source_security_announces_rust_gcc_funding\">https://opensrcsec.com/open_source_security_announces_rust_gcc_funding</a></p>\n<p>The work, being headed by Philip Herron with help from two Google Summer of Code students and a surprising number of members of the Rust community, has accomplished an impressive amount in just its first year. We're so pleased with the progress being made that we're extending and expanding that support for the upcoming year.</p>\n<h3 id=\"marcey%3A-what-was-open-source-security%E2%80%99s-motivation-to-join-the-rust-foundation%3F\">Marcey: What was Open Source Security’s motivation to join the Rust Foundation? <a class=\"direct-link\" href=\"#marcey%3A-what-was-open-source-security%E2%80%99s-motivation-to-join-the-rust-foundation%3F\">#</a></h3>\n<p><strong>Spengler</strong>: When we heard about the formation of the Rust Foundation, we wanted to make sure we were involved to help support the broader goals and initiatives of Rust, rather than just the GCC-specific work we're funding. We also wanted to demonstrate that there is both interest and funding for a broader Rust ecosystem that we believe will be crucial to its widespread adoption.</p>\n<h3 id=\"marcey%3A-what-do-you-hope-the-rust-foundation-will-accomplish-going-forward%3F\">Marcey: What do you hope the Rust Foundation will accomplish going forward? <a class=\"direct-link\" href=\"#marcey%3A-what-do-you-hope-the-rust-foundation-will-accomplish-going-forward%3F\">#</a></h3>\n<p><strong>Spengler</strong>: Long-term, we'd like to see the Rust Foundation help break down barriers to Rust adoption, support the entire Rust ecosystem, and help publicize Rust's strengths and successes to a wider audience.</p>\n<h3 id=\"marcey%3A-when-and-how-did-you-personally-get-involved-with-rust-itself-and-how-has-your-involvement-evolved%3F\">Marcey: When and how did you personally get involved with Rust itself and how has your involvement evolved? <a class=\"direct-link\" href=\"#marcey%3A-when-and-how-did-you-personally-get-involved-with-rust-itself-and-how-has-your-involvement-evolved%3F\">#</a></h3>\n<p><strong>Spengler</strong>: I've followed Rust with interest for some time now.  For the past 20 years of grsecurity development, our strategy has always been closing down entire classes of vulnerabilities and avenues of attack, so a language that can accomplish the same for new code is closely aligned with our vision. While I've been critical in the past of mass-rewriting of existing codebases in memory-safe languages as a viable security strategy, I absolutely believe the greatest good can be achieved when the barriers to entry for Rust are broken down and the &quot;mixed-binary&quot; problem mentioned above is resolved. That would provide Rust the equal footing and ease of adoption that will allow it to thrive on its substantial merits. I'm eager to see what's in store for Rust in the future, and I’m happy to play a tiny part in enabling others to pursue work on Rust that will benefit everyone.</p>\n<p>To learn more about the Rust Foundation, check out our <a href=\"https://foundation.rust-lang.org/posts/\">recent blog posts</a>, and follow us on <a href=\"https://twitter.com/rust_foundation?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor\">Twitter</a> and <a href=\"https://www.linkedin.com/feed/update/urn:li:activity:6838821610569502720/\">LinkedIn</a> to stay up to date.</p>\n",
      "date_published": "2021-09-21T00:00:00Z"
    },{
      "id": "https://foundation.rust-lang.org/posts/2021-06-25-announcing-executive-search/",
      "url": "https://foundation.rust-lang.org/posts/2021-06-25-announcing-executive-search/",
      "title": "Announcing our Executive Search",
      "content_html": "<p>With a successful launch behind us and an ambitious agenda ahead, the Rust Foundation is looking to channel the energy and vision of our members with the hiring of the organization’s first permanent executive director. In short, we’re in search of a dynamic leader who can help us unlock the Foundation’s full potential, connecting our aspirations with strategy and execution.</p>\n<p>While there would be clear benefits to having an existing member of the Rust community fill this role, we would also be excited to introduce someone new with the right blend of experience and expertise. In either case, the new executive director will need to work with and learn from Rust’s famously supportive community in order to succeed. This person will lead the Foundation’s efforts to support the volunteer work of maintainers, by identifying, funding, and leading programs like eliminating maintainer out-of-pocket costs.</p>\n<p>We’re looking for a leader who can develop clarity in ambiguous situations and who can experiment and explore the best ways for the organization to fulfill its mission. We’re looking for a collaborator and consensus-builder, someone who is adept at working with stakeholders, engaging volunteers, and empowering people to joyfully do their best work. We’re looking for someone who eats and breathes accountability, who is comfortable assembling a strategy and then taking responsibility for its execution.</p>\n<p>If you or someone you know is interested to learn more about the executive director role, we invite you to review the <a href=\"https://candidates.perrettlaver.com/vacancies/2358/executive_director/\">full description</a>. The Rust Foundation has retained the services of Perrett Laver to lead our search for the ideal candidate. Those wishing to be considered should follow the instructions available within the position description, submitting a CV along with a cover letter that details why their qualifications and talents make them particularly well-suited to fill the role. This is a global search — US residency is not a requirement.</p>\n<p>The Rust Foundation Board of Directors also wishes the best to Ashley Williams, who will be leaving the post of interim executive director after playing a key role in helping us launch the Rust Foundation. We wish Ashley great success as she moves on to her next adventure.</p>\n<p><em>The Rust Foundation is an Equal Opportunity Employer and all qualified applicants will receive consideration for employment without regard to gender identity and expression, race, color, religion, sex, national origin, sexual orientation, age, disability, ancestry, marital status, military or veteran status, or any other characteristic protected by law.</em></p>\n",
      "date_published": "2021-06-25T00:00:00Z"
    },{
      "id": "https://foundation.rust-lang.org/posts/2021-04-29-membership-update/",
      "url": "https://foundation.rust-lang.org/posts/2021-04-29-membership-update/",
      "title": "Q12021 Membership Update",
      "content_html": "<p>It's been a busy time for the Rust Foundation as the new board of directors gets to know each other and establish its values and goals. I'm excited to announce we have several new Foundation members, including a new Platinum member and our first set of Silver Tier members.</p>\n<p>If you are interested in becoming a member- please reach out at <a href=\"mailto:foundation@rust-lang.org\">foundation@rust-lang.org</a>.</p>\n<h2 id=\"new-platinum-member\">New Platinum Member <a class=\"direct-link\" href=\"#new-platinum-member\">#</a></h2>\n<ul>\n<li><a href=\"https://www.facebook.com/\">Facebook</a> was an early adopter of Rust and uses it in many aspects of development, from source control to compilers. Joel Marcey will be joining the Board of Directors as Facebook's Member Director. Read more about Joel <a href=\"/posts/2021-04-29-introducing-joel-marcey\">in his own words</a>.</li>\n</ul>\n<h2 id=\"new-silver-members\">New Silver Members <a class=\"direct-link\" href=\"#new-silver-members\">#</a></h2>\n<ul>\n<li><a href=\"https://zama.ai/\">Zama</a> builds <a href=\"https://zama.ai/technology/\">open-source homomorphic encryption solutions</a> for data science and AI. They use Rust throughout, from their cryptographic library to their machine learning frameworks.</li>\n<li><a href=\"https://ferrous-systems.com/\">Ferrous Systems</a> improves the Rust ecosystem by providing training and services, and employs maintainers of the Rust compiler. It also enables Rust on embedded, by providing important ecosystem tooling for the embedded space like <a href=\"https://knurling.ferrous-systems.com/\">knurling</a> and co-maintaining libraries like <a href=\"https://github.com/nrf-rs/nrf-hal\">nrf-hal</a>. Their current hallmark project is <a href=\"https://ferrous-systems.com/ferrocene/\">Ferrocene</a> to enable Rust in safety-critical spaces.</li>\n<li><a href=\"https://www.tag1consulting.com/\">Tag1Consulting</a> is a global technology consulting firm that is an ardent advocate for supporting the open source projects they depend on. They rely on Rust for some of their projects, such as <a href=\"https://goose.rs\">goose.rs</a>, which is a highly scalable loadtesting tool inspired by the Python based Locust Framework.</li>\n<li><a href=\"https://www.clever-cloud.com/\">CleverCloud</a> is an IT Automation platform that has been present in the Rust community since early in Rust's history. They proudly contribute to many Rust open source projects, such as <a href=\"https://crates.io/crates/nom\">nom</a>, <a href=\"https://github.com/sozu-proxy/sozu0\">sozu</a>, and many others.</li>\n</ul>\n",
      "date_published": "2021-04-29T00:00:00Z"
    },{
      "id": "https://foundation.rust-lang.org/posts/2021-04-29-introducing-joel-marcey/",
      "url": "https://foundation.rust-lang.org/posts/2021-04-29-introducing-joel-marcey/",
      "title": "Introducing Joel Marcey",
      "content_html": "<p><em>Over the next five weeks, we'll be running a series called &quot;Getting to know the board&quot;, publishing blog posts from each member of the Rust Foundation <a href=\"/board\">Board of Directors</a>, introducing them to the community. You can view the posts in this series <a href=\"/tags/getting%20to%20know%20the%20board%20series/\">here</a>.</em></p>\n<p>Ever since my late father gave me access to his <a href=\"https://en.wikipedia.org/wiki/IBM_Personal_Computer_XT\">IBM PC XT</a> back in the early-md 1980s, and I decided that <a href=\"https://en.wikipedia.org/wiki/Fdisk\">FDISK</a> was the most interesting command in the IBM instruction reference manual, it was pretty clear where my career path was heading, even if my father was not so keen on my use of the command on his computer.</p>\n<p>The first programming language I was ever exposed to was BASIC (or maybe it was Logo - anyway, I digress) .</p>\n<pre><code>10 PRINT &quot;HELLO&quot;\n20 GOTO 10\n</code></pre>\n<p>Look familiar? For many of us, these two lines were our first exposure to the power of what programming could do. Look at all those “Hello”s just printing ad nauseum until we stopped it with a Ctrl-C.</p>\n<p>From BASIC, the list of languages I used grew to Pascal in high school to C, C++, Smalltalk and Java in college. I was actually a Java support engineer in the IT department of Intel as part of my first full time job back in 1997.</p>\n<p>It was around 2000 where I believe my interest in programming languages went to the next level. Intel, along with Microsoft and HP, was one of the co-sponsors for the standardization of C# and the CLI (a.k.a. CLR) in <a href=\"https://www.ecma-international.org/\">Ecma</a>. And I was Intel’s main representative in that effort. For much of that <a href=\"https://www.joelmarcey.com/resume\">decade</a>, I did my small part to shape what would become those two standards - I wrote documentation tools (XML to Word using XSLT and COM Interop - remember COM Interop?), wrote pieces of both specifications, was convenor of the CLI standard technical group, and chair of the committee responsible for those standards and other programming-based standards as well.</p>\n<p>My work in Ecma and the relationships I made there led me to Facebook in 2013 as a contractor where I was hired to help document and release a new programming language called Hack. And I have been at Facebook ever since, now a full-time employee. In that time, I have been involved with even more programming languages - PHP, Hack, JavaScript (where we used it and React to build one of my favorite projects ever, <a href=\"https://docusaurus.io\">Docusaurus</a>), Flow, and, of course, Rust.</p>\n<p>I have known about Rust since its early days back in 2010-2011, and, of course, later heard of the “canonical” <a href=\"https://doc.rust-lang.org/book/\">book</a>, The Rust Programming Language. But I really hadn’t started getting directly involved with the language until towards the end of 2019 when I began to work with the team responsible for Facebook’s digital wallet <a href=\"https://www.novi.com/\">Novi</a>. Facebook, through Novi, is a member of the <a href=\"https://diem.com\">Diem Association</a>. The <a href=\"https://github.com/diem/diem\">Diem blockchain</a> is primarily written in Rust, covering 94 percent of the open source<a href=\"https://github.com/diem/diem\"> codebase</a>. In addition,<a href=\"https://developers.diem.com/main/docs/move-introduction\"> Move</a>, a new, secure programming language to be used for the blockchain, was developed with Rust. It was with this work , and then seeing how Facebook was really investing in the Rust language throughout the company, that I knew Rust’s rise and popularity wasn’t just fleeting. Rust is here to stay as a language to be used for big things.</p>\n<p>One thing always stuck in my mind as I learned and utilized all of these languages -- can they evolve to continue making the lives of developers easier? Some people see a productivity progression from C to C++ to C#, for example. I saw a productivity progression from PHP to Hack. I believe Rust falls into that increased productivity category. Working with the language, how it is able to easily, yet with such precision and detail, let you know where you have gone wrong at compile time, you just feel more efficient. Rust stands on its own merits, but I have to imagine coming from a language like C++ to Rust, is where that productivity progression really shines.</p>\n<p>And, seriously, if the Linux kernel is actually starting to even <a href=\"https://arstechnica.com/gadgets/2021/03/linus-torvalds-weighs-in-on-rust-language-in-the-linux-kernel/\">consider</a> Rust as a language to be used for that codebase, well, that’s when you know you have made it.</p>\n<p>I can’t wait to work with everyone to help drive the language forward. I am really excited to be part of the Rust Foundation.</p>\n",
      "date_published": "2021-04-29T00:00:00Z"
    },{
      "id": "https://foundation.rust-lang.org/posts/2021-04-22-introducing-lars-bergstrom/",
      "url": "https://foundation.rust-lang.org/posts/2021-04-22-introducing-lars-bergstrom/",
      "title": "Introducing Lars Bergstrom",
      "content_html": "<p><em>Over the next five weeks, we'll be running a series called &quot;Getting to know the board&quot;, publishing blog posts from each member of the Rust Foundation <a href=\"/board\">Board of Directors</a>, introducing them to the community. You can view the posts in this series <a href=\"/tags/getting%20to%20know%20the%20board%20series/\">here</a>.</em></p>\n<p>I’m super excited to have the opportunity to join the Rust Foundation board to both continue to support Rust and help to grow its usage at Google. I am currently the Director of Engineering for Android Platform Programming languages, where I work with teams supporting C++, Java, Kotlin, and Rust development. Like many other software projects, improving memory safety in our most performance-sensitive code is a critical need on Android to both keep our users safe and reduce the number of emergency security updates.</p>\n<p>Before Google, I was at Mozilla. I started there in 2013, working on the new Servo browser engine (back in the days of Rust 0.7, when it was still a managed-memory language that looks very different from today)! It was a delightful experience to get to collaborate with the Rust team as the language evolved, alongside the development of the Servo browser engine and several other projects. Later, my primary activity was the work to make it possible to use Rust code in Firefox and share pieces with the community - which was really more about people, processes, and tooling than the language or libraries! I’m excited to have the opportunity here at Google to continue to ship more software that uses Rust while sharing our feedback and contributing back to the community.</p>\n<p>I’m hopeful that the Foundation will help Rust grow new collaborations around activities that many individuals and companies are doing today that could benefit the broader community. For example, each crate import/update undergoes additional security reviews, license/code verification, and performance analysis internally at most companies, but that information is not shared externally today. Further, while it’s ideal to write new projects in Rust, for most of us, we need to integrate Rust into existing systems - many of which are in C++ and each of which uses a unique set of features that pose challenges to efficient integration with Rust. Collaborating across companies, we could build solutions that work across the industry. Finally, for many critical systems (e.g., device drivers), formal verification that is accessible to Rust developers could also help us eliminate an even broader set of issues in software systems beyond memory safety.</p>\n<p>Before Mozilla, my PhD work was on an ML dialect, Manticore, with my contributions focused on compiler optimizations and the runtime (GC, parallelism, core libraries, etc.). A longer time ago, I spent 7 years at Microsoft on Visual Studio working on the IDE and build systems and managing the team that built the new text editor, debugger, and common compiler infrastructure.</p>\n<p>Personally, I’m from the Chicago area originally, but have spent most of my management career building and working with hybrid teams and partners spread across the globe. I’ve been a “gym rat” since my teenage years, and one thing I’ve enjoyed has been working out at a variety of curious fitness centers globally with other Rustaceans!</p>\n",
      "date_published": "2021-04-22T00:00:00Z"
    },{
      "id": "https://foundation.rust-lang.org/posts/2021-04-22-introducing-josh-stone/",
      "url": "https://foundation.rust-lang.org/posts/2021-04-22-introducing-josh-stone/",
      "title": "Introducing Josh Stone",
      "content_html": "<p><em>Over the next five weeks, we'll be running a series called &quot;Getting to know the board&quot;, publishing blog posts from each member of the Rust Foundation <a href=\"/board\">Board of Directors</a>, introducing them to the community. You can view the posts in this series <a href=\"/tags/getting%20to%20know%20the%20board%20series/\">here</a>.</em></p>\n<p>My name is Josh Stone, and I’m serving on the Rust Foundation board as a Project Director in the area of reliability. When I’m not thinking in Rust, you might find me riding my bike, playing video games with my kids, or learning the next skill in my pandemic-initiated woodworking. But for now I’d like to share just a little bit about how I got started with Rust.</p>\n<p>My favorite way to tinker with a new programming language has been to solve <a href=\"https://projecteuler.net/\">Project Euler</a> problems. My day job was all in C and C++, but I would tinker with other languages when I could, and for a while my main preference was Python. In line with the site’s policy, I won’t share all my solutions. However, the <a href=\"https://projecteuler.net/problem=1\">first problem</a> has been spoiled many times, asking you to “Find the sum of all the multiples of 3 or 5 below 1000”, so here’s what I had in Python:</p>\n<pre><code>def solve(U=1000):\n    def sum_multiples(n):\n        m = (U - 1) // n\n        return n * m * (m + 1) // 2\n    return sum_multiples(3) + sum_multiples(5) - sum_multiples(15)\n</code></pre>\n<p>Rust had been on my radar for a while, but I was only reading about it here and there. In April 2014, I finally gave it a real try, and my very first Rust program was just a translation of that problem 1 solution:</p>\n<pre><code>fn solve(u: uint) -&gt; uint {\n    let sum_multiples = |n| {\n        let m = (u - 1) / n;\n        n * m * (m + 1) / 2\n    };\n    sum_multiples(3) + sum_multiples(5) - sum_multiples(15)\n}\n</code></pre>\n<p>I barely needed to change anything at all, but it gave me a fully compiled and optimized program, which was very exciting to me. In fact, if this is called with constant input, it will even get inlined and optimized down to the final answer, statically. This code still works with modern Rust too, if we fix the pre-1.0 <code>uint</code> -- just change that to <code>usize</code> or perhaps <code>u32</code>.</p>\n<p>That little example doesn’t really even scratch the surface of the power of Rust though. The easy closure is nice, but you could write that with a C++11 lambda too, or even a GCC nested function in C if you’re a little sadistic. This was just a tiny learning exercise, and the exciting promise it carried was that my Rust code would be <strong>safe</strong>, statically and continuously checked by the compiler.</p>\n<p>Memory safety and thread safety, without sacrificing performance and productivity, what a dream! I’m not exactly sure what pushed me over the edge to try it at that time, but I had certainly seen a fair share of nasty bugs in both userspace and the kernel while working on <a href=\"http://sourceware.org/systemtap/\">SystemTap</a>. (Coincidentally, Graydon Hoare also worked on that project, but before my time.) Not all of those bugs I experienced would be caught if written in Rust, but certainly some would. It really does feel like rustc is a big step toward the mythical <a href=\"http://wiki.c2.com/?SufficientlySmartCompiler\">Sufficiently Smart Compiler</a>, letting you write nice code without worrying about a suite of low-level gotchas.</p>\n<p>So I went on porting more of my code to Rust, and when the num crates were pulled out of std before Rust 1.0, I was happy to volunteer as a maintainer, being directly useful to my Project Euler tinkering. As I started applying parallelism to some of those harder problems, I got involved in Rayon, and so on I’ve been happy to contribute to other crates as well. Then 4 years ago I changed teams at Red Hat to start maintaining the Rust toolchain for Fedora and RHEL full time, making Rust <em>officially</em> “what I work on.” Now with the Foundation, I’m excited to be in a position to enable more people to share in that work!</p>\n<p>Within the Rust project, I’m currently a member of the release team, the security response working group, and compiler team contributors with a focus on the LLVM working group. I hope these roles have prepared me well to serve as Project Director for reliability. We always want Rust to “just work”, so you’re free to update to the latest release without fear of regressions. Our track record is good, but of course not perfect, and I’ll be looking for ways to track and improve this. Services like <a href=\"http://crates.io\">crates.io</a> and <a href=\"http://docs.rs\">docs.rs</a> are important too, not just in general uptime but also broad accessibility. I have less experience in this kind of infrastructure, but I am definitely open to suggestions. Let me know how the Rust Foundation can make Rust more reliable for you!</p>\n",
      "date_published": "2021-04-22T00:00:00Z"
    },{
      "id": "https://foundation.rust-lang.org/posts/2021-04-15-introducing-shane-miller/",
      "url": "https://foundation.rust-lang.org/posts/2021-04-15-introducing-shane-miller/",
      "title": "Introducing Shane Miller",
      "content_html": "<p><em>Over the next five weeks, we'll be running a series called &quot;Getting to know the board&quot;, publishing blog posts from each member of the Rust Foundation <a href=\"/board\">Board of Directors</a>, introducing them to the community. You can view the posts in this series <a href=\"/tags/getting%20to%20know%20the%20board%20series/\">here</a>.</em></p>\n<p>Hi, Rustaceans! My name is Shane Miller, and I lead the Rust Platform team at AWS. I have been creating my own unique career path (maxing out my weirdness budget) for about 30 years. I have been a high school dropout, Smalltalk principal engineer, university math faculty, retail business owner, political consultant, engineering manager, and Principal Technical Program Manager and Senior Engineering Manager at AWS.</p>\n<p>At AWS, we evaluate everything using our leadership principles, and my favorite principle is, “Leaders are right a lot. [...] They seek diverse perspectives and work to disconfirm their beliefs.” The best thing about working at AWS is the seemingly infinite opportunities to “disconfirm my beliefs”, and my sense is that this principle is a guiding force in the Rust community as well. That’s one of the things that makes me want to contribute to the future success of Rust.</p>\n<p>I am an accidental leader for Rust at AWS. I started down this road in 2019, trying to solve my own problem. I was building a new engineering team that had developed a prototype in Rust, and the only way we could successfully deliver our goals was to both grow our team and our Rust expertise. Some of you have received cold calls or emails from me ;)</p>\n<p>In January of 2020, my engineers and I decided to host an internal Rust workshop, so we could meet the AWS Rust community. I reserved a room for 30 people, and we sent out an internal survey to find out how many engineers would be interested in attending. The response was hundreds of engineers wanted to attend and dozens wanted to use the opportunity to give a talk about their own Rust work at AWS!</p>\n<p>My engineers and I became internal Rust community organizers at AWS. We coordinate a talk series called “A Slice of Rust,” host what amounts to company-wide sprint demos called “A Drink to Rust,” support Rust office hours, build and host Rust workshops, and facilitate Rust engineer recruiting. And all of that has paid off - not just for our team - but for all of Rust at AWS.</p>\n<p>We did grow our team, by the way, and we started a new one. We created a team focused on Tokio, and more recently, we expanded the team’s charter and hired key Rust maintainers to continue to work in collaboration with the larger Rust community.</p>\n<p>As a director on the Foundation's Board, I envision the Foundation becoming an organization that provides the Rust project maintainers with the support I provide my own AWS team. We make Rust truly accessible when we eliminate maintainer out-of-pocket costs for compute, storage, and productivity tools. We can also provide access to resources like leadership and communication training that could help Rust maintainers grow themselves and their teams.</p>\n<p>What I’m excited about with the Foundation is that it gives me a mechanism to contribute to our community in different ways. I have a lot of experience delivering software at massive scale. I was a Principal Technical Program Manager at AWS before I returned to the engineering manager role. I launched services that spanned organizations and geographies. I know how hard it is to be successful with a combination of complexity and scale, and I am looking forward to helping our community simplify some of those complexities. In the words of Seth Godwin, “What do we do for a living? [...] what we do is we try to change everything. [...] we try to find a piece of the status quo - something that bothers us, something that needs to be improved, something that is itching to be changed - and we change it. We try to make big permanent, important change.” Let’s build community and technology that outlast us all.</p>\n",
      "date_published": "2021-04-15T00:00:00Z"
    },{
      "id": "https://foundation.rust-lang.org/posts/2021-04-15-introducing-jane-lusby/",
      "url": "https://foundation.rust-lang.org/posts/2021-04-15-introducing-jane-lusby/",
      "title": "Introducing Jane Lusby",
      "content_html": "<p><em>Over the next five weeks, we'll be running a series called &quot;Getting to know the board&quot;, publishing blog posts from each member of the Rust Foundation <a href=\"/board\">Board of Directors</a>, introducing them to the community. You can view the posts in this series <a href=\"/tags/getting%20to%20know%20the%20board%20series/\">here</a>.</em></p>\n<p>Hi everyone! My name is Jane Lusby aka <code>@yaahc</code>. My pronouns are she/her. You might know me as the maintainer of <a href=\"https://rustbeginners.github.io/awesome-rust-mentors/\">awesome-rust-mentors</a> or as the lead of the error handling project group. Today I'm excited to announce that I'm going to be the new project director of collaboration on the board of The Rust Foundation.</p>\n<p>Now, some background, the collaboration project director is one of the three area project directors, the other two being Reliability and Quality. The Rust project is emphasising collaboration because we believe that software engineering is primarily a social process rather than a technical one making establishing and nurturing relationships essential.</p>\n<p>Now, my personal involvement in Rust started back in early 2018 as part of a maker night project at my last job. We decided to make a physical button to launch our &quot;cannon test suite&quot; and picked Rust as the language to build it with. I quickly grew enamoured and started using Rust every chance I got, though initially it mostly ended up being used to rewrite bash scripts but with better error handling.</p>\n<p>Meanwhile, I further supplemented my learning by looking for random open source projects I could contribute to in order to learn Rust from experts. I started with clippy and rustfmt, which I found with the help of <a href=\"https://this-week-in-rust.org\">this-week-in-rust</a>'s CFP section, doing what small contributions I could. I also started going to meetups, which is where I met Manish when he randomly walked up to me, said hi, thanked me for my clippy contributions, and offered to mentor me if I want to contribute more <sup>[<a href=\"https://www.youtube.com/watch?v=HI8Gzg11LBo\">1</a>]</sup>.</p>\n<p>This to me is the moment where I felt like I'd truly joined the rust community. Through Manish's mentorship I met my first Rust friends. Manish encouraged me to do my <a href=\"https://www.youtube.com/watch?v=HI8Gzg11LBo\">first talk at COGoldRust</a> and to blog more as a way to practice technical speaking. Thanks to the further contributions Manish encouraged, I ended up joining the clippy team, and later wg-traits as well. I probably wouldn't be where I am today without Manish's support and encouragement.</p>\n<p>Interactions like the one between Manish and I are the kind of collaboration I want to encourage and help grow through the Rust Foundation. I also want to tackle problems that affect active contributors, such as burnout, unconscious bias, and effective moderation tools, to name a few. I don’t have solutions to these problems yet, but I’ll be working together with the team at the foundation and the rest of the Rust community to address them. So please, if you have any feedback, ideas, or problems related to collaboration that you think I should know, <a href=\"https://twitter.com/yaahc_/\">please reach out</a> to me and let me know. Rust has already done a great job building up a healthy community. My hope is to take what I've learned through my involvement and from other members in the community and to apply that going forward to make the Rust Foundation as powerful and positive a tool for the rest of the community as it can be.</p>\n<p>PS: When I'm not writing Rust, I spend most of my time relaxing with my beautiful partner and our three cats. As a hobby I like to experiment with making espresso, though ironically I only ever make decaf for myself because caffeine makes me ill.</p>\n<p><img src=\"/img/posts/2021-04-15-introducing-jane-lusby/espresso_machine.jpg\" alt=\"A seemingly Rust branded espresso machine that is infact a Rocket Appartamento\"></p>\n",
      "date_published": "2021-04-15T00:00:00Z"
    },{
      "id": "https://foundation.rust-lang.org/posts/2021-04-08-introducing-peixin-hou/",
      "url": "https://foundation.rust-lang.org/posts/2021-04-08-introducing-peixin-hou/",
      "title": "Introducing Peixin Hou",
      "content_html": "<p><em>Over the next five weeks, we'll be running a series called &quot;Getting to know the board&quot;, publishing blog posts from each member of the Rust Foundation <a href=\"/board\">Board of Directors</a>, introducing them to the community. You can view the posts in this series <a href=\"/tags/getting%20to%20know%20the%20board%20series/\">here</a>.</em></p>\n<p>The Rust Foundation is up and running! This is really a great milestone for the Rust ecosystem. A system programming language like Rust is a fundamental building block so having an independent entity (the foundation) to facilitate open governance will boost widespread adoption for sure. Open governance here means certain assets such as logo, trademark, IT infrastructure and so on are NOT controlled by a single commercial organization, and with the governance structure separating decisions about funds and business affairs from the technical project’s decisions, all these will give participants from various organizations, even they are competitors in business,  a neutral place with assurance backed by the foundation bylaw and operation mechanism. I know the foundation also serves other functionalities and those are all benefits to having a foundation, but the open governance part is a very important one I think. Projects like Kubernetes were much more widely adopted and attracted many players since the CNCF was established, and now it is the de-facto standard in the industry. And there are many more you can name. To be honest, the current Rust community governance structure is indeed open and very welcoming already, from the RFC process to the diversity of developers and various gate-keepers, so I really appreciate Mozilla’s great effort and the whole community to make this happen. And the establishment of the Rust foundation will just make it more attractive and give commercial players more peace of mind, and the composition of the founding platinum member companies so far has proven this. I am also happy to see that Rust is truly a global development activity, with contributors (copyright owners) from so many countries across almost all continents, and the software is publicly available across national boundaries. These will continuously be the mission and vision of the Rust Foundation.</p>\n<p>I have mainly done C programming in development work and my past technical experience was mainly focused on operating systems, media processing and other embedded system software. So performance and resource consumption are always some of the key metrics to consider. Rust is certainly a kind of language that can match C/C++ here. The second well recognized beauty of Rust is memory safety. Both of these reasons are why the company I am working for, Huawei, is interested in Rust and would like to invest to make the language widely adopted in products, since as an ICT infrastructure vendor, performance and security are basically the two fundamental baselines in many scenarios to judge when choosing a new programming language. But actually when I first got introduced to Rust by friends, I was amazed not by the above two advantages compared to other languages, instead by the look-and-feel of the language, the cleaner syntax, better modularity and more importantly, the package-management system, which certainly C/C++ is lacking as a standard. Although I did not have the chance to switch from C to Rust in my development work then, I can certainly understand why many have done so or make Rust as their first choice of system programming language.</p>\n<p><img src=\"/img/posts/2021-04-08-introducing-peixin-hou/rustchinaconf.png\" alt=\"scenes from rust china conf 2020\"></p>\n<p>Now let me share a bit information on what is happening in where I am from, China. At the end of last year, Rust China Conf 2020 was held in Shenzhen, and Huawei is the only top-level sponsor (happily done by my team ☺). In this event, I was thrilled to see so many cases, products and open source projects written in Rust and many developers are just entering university. Some told me they have been using Rust for several years, which means they started programming in Rust from high school. The topics they shared range from data analysis, operating systems, storage solutions, blockchain, robotics, autonomous vehicle and mobile applications. Also, a student from Tsinghua University, RunJi Wang, wrote an elegant distributed file system called MadFS, which helped a 500-node ARM based cluster to champion the recent IO500 List, with a score of almost 4 times than the second on the list (<em><a href=\"https://io500.org/\">https://io500.org/</a></em>). All of these demonstrated the strong momentum and the active development community here in China. And I will no doubt see more in the future.</p>\n<p><img src=\"/img/posts/2021-04-08-introducing-peixin-hou/io500.png\" alt=\"io500\"></p>\n<p>Looking into the future, with the establishment of the Rust foundation and strong investment from the members, we will see more language innovation and engineering implementation at a faster pace. For Huawei, areas we will invest in the community will include projects in numerical computation, robotics, virtualization and more. As the only platinum founding member from China so far, we would also like to promote Rust with all partners, this may include setting up local infrastructure such as <a href=\"http://crates.io\">crates.io</a> and local CI for better access and usability, translating more documentation into Chinese and holding more events here. Last but not least, we are eager to have more Rust talents to join us, in the EU, North America and China! And if you are in a place other than those above but also interested, no worries, let’s talk about more opportunities!</p>\n",
      "date_published": "2021-04-08T00:00:00Z"
    },{
      "id": "https://foundation.rust-lang.org/posts/2021-04-08-introducing-florian-gilcher/",
      "url": "https://foundation.rust-lang.org/posts/2021-04-08-introducing-florian-gilcher/",
      "title": "Introducing Florian Gilcher",
      "content_html": "<p><em>Over the next five weeks, we'll be running a series called &quot;Getting to know the board&quot;, publishing blog posts from each member of the Rust Foundation <a href=\"/board\">Board of Directors</a>, introducing them to the community. You can view the posts in this series <a href=\"/tags/getting%20to%20know%20the%20board%20series/\">here</a>.</em></p>\n<p>I guess it comes with the nature of an open source project that this is the first proper introduction to myself, even though I have been around Rust for over 7 years. But there’s a time for everything and this is a good chance to work out some aspects properly. But first, some details:</p>\n<pre><code class=\"language-code\">$ whoami\nFlorian Gilcher\nPronouns: he/him\nGithub: skade\nTwitter: Argorak\nArea: core director\n</code></pre>\n<p>Rust has been my chance to be involved in growing and shaping a programming language from early experimentation days into strong industry adoption. It is work that I am grateful for and that I want to continue on the board of the foundation. During my time on the board, I want to bring my experience and encourage a forward-thinking, implementation-driven approach towards a structure that amplifies the great and successful nature of Rust. I represent this with the view of someone who deeply cares about FOSS culture, global communities and a collaborative together. This includes the view of someone who cares about small and independent businesses. Being on the first board is an honor and a commitment - we prepare the space for all the people that come after us.</p>\n<p>Most Rustaceans may know me for community work - either through the community team, as one of the founders of <a href=\"http://berline.rs\">Rust Berlin</a> (over 150 events, go team!), <a href=\"http://rustfest.eu\">RustFest</a> and <a href=\"http://oxidizeconf.com\">OxidizeConf</a>. I’ve before that spent over a decade moderating bulletin boards (tech and non-tech related), co-created <a href=\"https://eurucamp.org\">eurucamp</a>, the Berlin Ruby conference and served on the board <a href=\"http://rubyberlin.org/\">Ruby Berlin</a>. I’m one of the co-creators and co-maintainers of the <a href=\"https://berlincodeofconduct.org/\">Berlin Code of Conduct</a>, a campaign to promote Code of Conducts to meetups. Interestingly, it is now used around the globe by conferences and meetups. For a while, I was in the leadership team of the Ruby web framework <a href=\"http://padrinorb.com/\">Padrino</a>. I ran the most active and long-running Elasticsearch users group, before broadening its scope and calling it <a href=\"https://www.meetup.com/Search-UG-Berlin/\">Search UG Berlin</a>. I’ve always been interested in programming languages and communities, which rather naturally led me to Rust - mainly because the project was easy to access and I could watch an interesting new language grow. In 2015, I decided to <a href=\"http://skade.me/blog/2015/extending-my-new-years-resolution.html\">not learn new programming languages</a> and instead focus deeply on Rust.</p>\n<p>I have a wide variety of interests outside of programming languages and tech: I hold a 1st Dan in <a href=\"https://en.wikipedia.org/wiki/Ky%C5%ABd%C5%8D\">Kyūdō</a> (japanese traditional archery) and do recreational diving. Music is probably the passion that was before and will outlive my career in tech (though purely as a listener - I learned a number of instruments and ultimately decided that I’d rather be an appreciative consumer). Sometimes, there’s little music references in talks and posts such as this. I’m generally interested in almost anything I haven’t tried out yet and always happy to spend some time with people - the best way to approach me at a conference is to tell me a little bit about a unique thing you do outside of coding. You may see me giving lightning talks for fun.</p>\n<p>I started coding in Rust in 2013 and my first project was <a href=\"https://github.com/skade/widmann\">widmann</a> - a port of the Ruby web framework <a href=\"https://sinatrarb.org\">Sinatra</a> to Rust. Over the past years, I helped out on a number of projects (such as the <a href=\"https://async.rs\">async.rs</a> project and took over maintenance of the <a href=\"https://github.com/skade/leveldb-sys/\">leveldb binding layer, leveldb-sys.</a> Since 2015, I teach Rust professionally and co-maintain <a href=\"https://github.com/ferrous-systems/teaching-material\">Open Source Training Material</a>, which my courses are based on. In 2018, I went all in and co-founded <a href=\"https://ferrous-systems.com/\">Ferrous Systems</a>, a company focused on helping the industry adopt Rust by spreading knowledge, practice and also improving Rust itself.</p>\n<p>While being busy with these projects, I usually try to avoid coding outside of work hours. For that reason, it was only natural to me to join the Rust project at a different place and am a member of the Rust Community Team since its inception. I’ve always seen the Community Team as a crucial part of the Rust project and one that makes the great work of many engineers visible and accessible. I consider it a misconception that community work is non-technical: people representing a technical project competently need a wide variety of technical understanding and very broad knowledge to be effective and speak to their peers. In some way, it has always been a motivator for me to extend my technical knowledge and view. I understand community engagement as a <em>mapping process</em> and sometimes literally draw it as a map. As an example, here’s a map of places where I spoke or organised events (green dots) and places where I often travel to for community engagement (blue lines). The latter may also be places where I just happen to travel to regularly and engage with the community on that occasion. Those maps help me both to understand **my **connections and **my **focus. Another map for example is: communities that I know and where I have connections. I’m regularly surprised how many Rust communities are new to me, even as someone actively searching for them.</p>\n<p><img src=\"/img/posts/2021-04-08-introducing-florian-gilcher/map.jpeg\" alt=\"map of florian's rust community\"></p>\n<p>What drew me into the Rust project and still gives me most joy is its pragmatism: a curious mix of interest in theory with a high desire for application. No implementation without talk, but also no talk without implementation. The project has a good feel for when innovation is needed or an existing standard should be taken and implemented well. I believe Rust's good image as an innovative project is based on good power-management rather than a desire to innovate everywhere. Rust as an organisation and the people working on it as individuals are incredibly self-confident - capable of saying **no **equally strong as it can commit to something. This applies to all levels, especially also to organisational ones. I still, after 5 years, am still happy about the Rust Projects desire for improving on the existing. The Rust project always put people first, which I think is a key reason for its massive growth. For better or worse, the Rust project was able to scale as big as it is by putting serious thinking into the people's side and trusting happy people to do good work. The Rust Foundation will be a major tool in taking this ethos to a new level.</p>\n<p>Rust is a project open to volunteers and this is what allowed me to join. Voluntarism is a strength that - if well-managed and optional - is also a crucial cornerstone for diversified access and enablement of personal opportunities. Not many fields of endeavour make it so cheap and direct to try out and get in touch with a new technology. It is my desire to build structures in which volunteers can spend their time for their personal benefit on their own terms and have a good experience. Given that the space has grown so massively over the last 10 years, this is a space where solutions often need to be invented.</p>\n<p>From my perspective, the foundation is to become an inherent and close part to the Rust project. As it is good practice in the Rust project, I imagine to apply proven standards where useful to make room for effective innovation. I fundamentally believe that “running a global FOSS project sustainably for all” is a nut that has not been fully cracked. I equally believe that those topics will remain in the focus for the next decade and the Rust Foundation can take leadership in finding solutions there - it’s built on a solid foundation.</p>\n<p>“If the Rust programming language would not exist, the Rust project would still have something to bring to the world” is something Mark Rousskov said during one of the foundation setup meetings - words to live by.</p>\n",
      "date_published": "2021-04-08T00:00:00Z"
    },{
      "id": "https://foundation.rust-lang.org/posts/2021-03-25-introducing-nell-shamrell-harrington/",
      "url": "https://foundation.rust-lang.org/posts/2021-03-25-introducing-nell-shamrell-harrington/",
      "title": "Introducing Nell Shamrell-Harrington",
      "content_html": "<p><em>Over the next five weeks, we'll be running a series called &quot;Getting to know the board&quot;, publishing blog posts from each member of the Rust Foundation <a href=\"/board\">Board of Directors</a>, introducing them to the community. You can view the posts in this series <a href=\"/tags/getting%20to%20know%20the%20board%20series/\">here</a>.</em></p>\n<p>Greetings fellow Rustaceans!</p>\n<p>It is an honor to serve you as lead editor of <a href=\"https://this-week-in-rust.org/\">This Week in Rust</a>, as a member of the <a href=\"https://github.com/rust-lang/wg-async-foundations\">Async Foundations working group</a>, and now as a <a href=\"https://foundation.rust-lang.org/board/\">Rust Foundation board member</a>.</p>\n<p>I found success with Rust, and was able to lift others to their own success, through the global Rustacean community and, especially, the actions of Rust’s maintainers. We are a group of people where empathy and personal maturity are as important as (if not more important than) technical excellence. We are a shining example of how an open source community can achieve great advancements - advancements with the potential to affect an entire industry - and still treat each other with dignity, respect, and support. We are not successful in spite of our higher standard of conduct, we are successful because of it.</p>\n<p>Many of you knew me as a member of the Rust team at Mozilla. After the August 2020 layoffs, I had the opportunity to join Microsoft as a Principal Software Engineer in the Open Source Programs Office. While it’s no secret Microsoft was at odds with open source in the past, I can assure you from my own personal experience that a true transformation has taken place. Microsoft understands that open source software is critical for its success as a business and for the success of our customers. Moreover, Microsoft also understands that, in order for the projects we depend on to be successful, we must behave as exemplary open source citizens, and engage meaningfully with the open source community. This includes donating money as a sponsor of the Rust Foundation. It also includes dedicating engineering effort to the Rust project to make it not only work better for Microsoft but also for all Rustaceans across the world. Microsoft is excited about the opportunities to engage with and give back to the community, and expects to be working closely with Rust’s maintainers on the compiler, core tooling, documentation, and more.</p>\n<p>Prior to joining the Rust Foundation, my primary non-profit experience was as a board director of <a href=\"https://operationcode.org/\">Operation Code</a>. Operation Code is an organization dedicated to teaching software engineering skills to the military community and their families. Through my experience there, I learned that the highest duty of any board member is always to those we serve. Sponsors and donors certainly are vital to a foundation’s success, but addressing their needs must never come at the expense of the community that is the reason for our existence.</p>\n<p>Part of my role as Microsoft’s representative on the Rust Foundation board is to represent the interests of Microsoft to the Rust community, but it is even more important for me to represent and advocate for the interests of the Rust’s maintainers and community to Microsoft. Understanding and balancing these needs and finding common ground will not always be easy, but it is something we Rustaceans do every day through our RFC process. There is so much opportunity for us to learn from each other, to build with each other, to design solutions we never would have considered previously.</p>\n<p>My success as a board member will be measured by the success of Rust’s maintainers and the entire Rustacean community. And I need your help. One of the best ways to help me is to continue commenting on <a href=\"https://github.com/rust-lang/rfcs\">RFCs</a>. This helps me understand your needs and how I can best support them both as a board member and as a fellow Rustacean. Additionally, since most Rust meetups are still online, I will be attending as many of them as I can over the next few months. Please don’t hesitate to approach me and introduce yourself!</p>\n<p>I cannot wait to see what we build together.</p>\n",
      "date_published": "2021-03-25T00:00:00Z"
    },{
      "id": "https://foundation.rust-lang.org/posts/2021-03-25-introducing-mark-rousskov/",
      "url": "https://foundation.rust-lang.org/posts/2021-03-25-introducing-mark-rousskov/",
      "title": "Introducing Mark Rousskov",
      "content_html": "<p><em>Over the next five weeks, we'll be running a series called &quot;Getting to know the board&quot;, publishing blog posts from each member of the Rust Foundation <a href=\"/board\">Board of Directors</a>, introducing them to the community. You can view the posts in this series <a href=\"/tags/getting%20to%20know%20the%20board%20series/\">here</a>.</em></p>\n<p>Hey, I’m Mark Rousskov (often going by simulacrum online), and I’m excited to serve as one of the project directors representing the Core team! I’ve been around in the Rust project since 2016, and currently lead the release team, and am a member of the core, infrastructure, and compiler contributors teams.</p>\n<p>What excites me about Rust is our strong commitment to solving problems through working together, both with people already around us today, but also always looking to include more people to learn from their experiences. I believe this emphasis on connections is the core reason for Rust's success.</p>\n<p>One example where this collaboration with other communities has had a memorable experience for me was during work on enabling fine-grained parallelism in the Rust compiler. The way that rustc and cargo manage parallelism today is via the <a href=\"http://make.mad-scientist.net/papers/jobserver-implementation/\">make jobserver</a> protocol. The current stable compiler isn't parallelized beyond the tail end - code generation - and increasing opportunities for parallelism stressed the jobserver. This led to a performance problem, where all readers on a pipe (used within the jobserver as a semaphore) were being woken when a single byte is written in. This led to a thundering herd of threads attempting to read from the pipe (all but one of which would fail). Normally, the next step would likely be to start trying to identify whether this was a known bug and working to report or fix it. However, we happened to have someone already active in the Linux kernel community - Josh Triplett - around helping us benchmark the results, and he informed us that this bug was already being fixed upstream. He also helped us understand the delay before most of our users could expect to see the change in the kernel on their systems. Growing and establishing these connections enhances everyone’s experience, and I look forward to finding opportunities to foster this growth.</p>\n<p>One of the reasons I'm so excited for the Foundation is it will help us define Rust's values and goals not just around software or programming language design, but around what I believe to be a more fundamental exploration: developing a model for sustainable, effective open collaboration on a global scale, bridging numerous communities. We already go far beyond ‘just’ a programming language in the project’s scope; I’m excited to see where our exploration goes, and what we can achieve together.</p>\n",
      "date_published": "2021-03-25T00:00:00Z"
    },{
      "id": "https://foundation.rust-lang.org/posts/2021-03-18-introducing-tyler-mandry/",
      "url": "https://foundation.rust-lang.org/posts/2021-03-18-introducing-tyler-mandry/",
      "title": "Introducing Tyler Mandry",
      "content_html": "<p><em>Over the next five weeks, we'll be running a series called &quot;Getting to know the board&quot;, publishing blog posts from each member of the Rust Foundation <a href=\"/board\">Board of Directors</a>, introducing them to the community. You can view the posts in this series <a href=\"/tags/getting%20to%20know%20the%20board%20series/\">here</a>.</em></p>\n<p>Hello, Rust community! My name is <a href=\"https://tmandry.gitlab.io/blog/\">Tyler Mandry</a>, and I’m excited to serve as<br>\nthe project director for quality on the board of the Rust Foundation.</p>\n<p>My journey with Rust started about five years ago. I was what you might call<br>\na reluctant enthusiast. I love learning new ways of doing things, but I’m<br>\nalso somewhat skeptical of “new tech hype.” At the time, I worked in<br>\nhigh-performance computing. Eventually I realized a huge portion of our time<br>\nwas spent chasing down bugs, like segfaults and data races, that were<br>\ndifficult to reproduce and could never have existed in a language like<br>\nRust.[1]</p>\n<p>Feeling the pain on a daily basis that Rust promised to prevent was what<br>\nfinally got me interested. But what got me hooked – and inspired me to<br>\ncontribute – was the thoughtfulness and openness of the project itself. The<br>\ntechnical decisions were all made in the open, and it was plain that everyone<br>\ncared deeply about making Rust the best it could be. No one knew me in the<br>\nRust community, but I was able to join a working group and contribute changes<br>\nright away.</p>\n<p>In 2019 I joined Google to work on the Fuchsia operating system, supporting<br>\nRust development, and I began leading the Rust on Fuchsia team in early 2020.<br>\nI’ve contributed a number of things in my time here like async/await compiler<br>\noptimizations, mentored work like source-based code coverage, and lead the<br>\nasync foundations working group.</p>\n<p>What else should you know about me? Well, when I’m not in front of a computer<br>\nI’m often on my bike, most likely listening to a podcast. I just began<br>\nlearning to play piano – ask me how that’s going in six months.[2]</p>\n<h2 id=\"the-road-ahead\">The road ahead <a class=\"direct-link\" href=\"#the-road-ahead\">#</a></h2>\n<p>Looking around, it’s becoming clear that Rust will play a big role in<br>\nhow we write software over the next 5-10 years – or more. Reliability,<br>\nefficiency, and productivity is a combination that will be in demand for a<br>\nlong time to come. I’m extremely excited to see more and more developers<br>\nlearning Rust every day.</p>\n<p>I see the establishment of a Rust foundation as a major step forward in the<br>\nmaturity of the project, not unlike what releasing Rust 1.0 meant for the<br>\nlanguage itself. Starting a foundation makes the project more sustainable<br>\n<em>and</em> unlocks a lot of new possibilities. I think the next two years will<br>\ninvolve “unlearning” all the things we thought we couldn’t do, but now can<br>\nthanks to dedicated funding.</p>\n<p>So, what can the foundation do to improve quality? I have specific ideas, but<br>\nI think it’s most important that the project first has an <em>accurate,<br>\ncomprehensive, detailed, and up-to-date</em> view of how it’s doing. So this year,<br>\nI’d like to begin by helping Rust contributors <em>fix blind spots</em> like where<br>\nthere are gaps in documentation and compiler errors, with the ability to<br>\nmeasure changes over time. Another thing we don’t monitor is how compiled<br>\ncode actually performs; the compiler team <a href=\"https://internals.rust-lang.org/t/help-needed-corpus-for-measuring-runtime-performance-of-generated-code/6794\">has wanted this</a> for a long<br>\ntime, and the Foundation could help make it happen. Finally, it’d be nice to<br>\nhave more visibility into changes in dependencies, like LLVM and system<br>\nruntime libraries, and how that could affect our pace of development.</p>\n<p>This is certainly ambitious, and I don’t expect it all to happen overnight.<br>\nBut I think the project will benefit greatly from making more informed<br>\ndecisions, and I hope this will allow Rust to continue the impressive<br>\ntrajectory it’s had so far.</p>\n<p>It’s been a joy to work on Rust, and I get the sense that we’re all just<br>\ngetting started. I’m looking forward to what the Rust project, including the<br>\nfoundation, will do in 2021 and beyond. I hope you are too.</p>\n<p>[1]: That’s not to say that the language we were using at the time <em>caused</em><br>\nthe problems, just that it failed to prevent them!<br>\n[2]: And in a year, but that seems too distant to motivate me today. This is<br>\nthe biggest accountability stunt I’ve pulled by far.</p>\n",
      "date_published": "2021-03-18T00:00:00Z"
    },{
      "id": "https://foundation.rust-lang.org/posts/2021-03-18-introducing-bobby-holley/",
      "url": "https://foundation.rust-lang.org/posts/2021-03-18-introducing-bobby-holley/",
      "title": "Introducing Bobby Holley",
      "content_html": "<p><em>Over the next five weeks, we'll be running a series called &quot;Getting to know the board&quot;, publishing blog posts from each member of the Rust Foundation <a href=\"/board\">Board of Directors</a>, introducing them to the community. You can view the posts in this series <a href=\"/tags/getting%20to%20know%20the%20board%20series/\">here</a>.</em></p>\n<p>Hi! I'm <a href=\"https://bholley.net/about/\">Bobby Holley</a>. I've been a Mozillian since 2008, and currently work in the office of the <a href=\"https://www.mozilla.org/en-US/about/leadership/#eric-rescorla\">Firefox CTO</a> on technical strategy and coordination. Last month I joined the Rust Foundation’s inaugural <a href=\"https://foundation.rust-lang.org/board/\">Board of Directors</a>, and today I thought I’d share a bit about why I’m here, what I like about Rust, and why I’m excited for its future.</p>\n<p>Since the <a href=\"http://venge.net/graydon/talks/intro-talk-2.pdf\">announcement</a> of Rust in 2010, I've had the privilege of watching it grow from a skunkworks side-project into the force of nature it is today. I wasn't involved much during the early years, but in 2015 I began working with the Servo team to figure out how to bring Rust’s unique capabilities to Firefox. We focused on the CSS engine because it was both performance-critical and extremely complex: in principle we wanted to parallelize it, but in practice couldn’t see a realistic path with C++ concurrency. Rust’s <a href=\"https://blog.rust-lang.org/2015/04/10/Fearless-Concurrency.html\">mutability control</a> and package ecosystem were <a href=\"https://www.youtube.com/watch?t=220&amp;v=UN_iIExdB9Q\">exactly what we needed</a>, and allowed us to ship <a href=\"https://bholley.net/blog/2017/stylo.html\">Stylo</a> with better performance, fewer bugs, and in less time than anyone thought possible. Since then I’ve worked on several other Rust-based initiatives in Firefox such as <a href=\"https://hacks.mozilla.org/2017/10/the-whole-web-at-maximum-fps-how-webrender-gets-rid-of-jank/\">WebRender</a> and <a href=\"https://github.com/mozilla/neqo/\">Neqo</a>, all of which have continued to deepen my appreciation for both the language and the community around it.</p>\n<p>In the early (pre-1.0) days, I had the mistaken impression that Rust was just for building browsers at Mozilla. So when I first joined #rust on IRC, I was surprised to find it teeming with smart and friendly people — often with no other connection to Mozilla — working together to use the language and move it forward. It’s clear to me now that this broad coalition was crucial. <a href=\"http://venge.net/graydon/talks/intro-talk-2.pdf#page=6\">From the start</a>, Rust did not aim to distinguish itself with novel technical ideas, but rather sought to bring together a number of well-understood concepts from the research community into something coherent, learnable, and broadly useful. This is hard work that takes a village, particularly the feedback loop around feature design, wide experimentation, and iteration.</p>\n<p>In some sense, the most important insight behind Rust’s success was not about technology but rather about people. Early on the Rust team <a href=\"https://www.reddit.com/r/rust/comments/6ewjt5/question_about_rusts_odd_code_of_conduct/didrult/\">made it a priority</a> to build a healthy and welcoming community around the project. This attracted talented contributors, helped them collaborate productively, and made it fun to stick around. This resulted in excellent software, which in turn attracted even more talent. This approach seems simple and obvious in retrospect, which is a reaction I frequently have to things that Rust gets right.</p>\n<p>Mozilla incubated Rust to build a better Firefox and contribute to a better Internet, but today it's clear that Rust has outgrown its roots. In its new home with the Rust Foundation, Rust will have the room to grow into its own success, while continuing to amplify some of the core values that Mozilla shares with the Rust community:</p>\n<ul>\n<li><strong>Safety</strong> in a connected world requires securing the browser, but also securing other client software along with the servers that handle people's data. Rust’s memory safety properties eliminate entire classes of exploits, and bringing those guarantees to more programs can protect people from harm.</li>\n<li><strong>Empowering</strong> people to create things themselves involves building tools that are safe, performant, and approachable. Web technologies like HTML and JavaScript have dramatically lowered the barrier to publishing information and interactive experiences, but some disciplines — like high-performance or embedded development — have traditionally required experts-only languages like C. Rust’s type checking, tooling, and documentation offer a much more accessible path for these use-cases, allowing more people to build more things.</li>\n<li>Foundational technologies should be developed in a truly <strong>open</strong>, <strong>collaborative</strong>, and <strong>inclusive</strong> way. Since its inception, the Rust project has set a very high standard for constructive dialog and positive collaboration, and serves as a model for how to build a healthy community around open-source technology.</li>\n</ul>\n<p>Mozilla and the Rust project are well-aligned on these values today, and you can expect us to champion them in our engagement with the Rust Foundation going forward.</p>\n<p>Rust exists because of the efforts of countless people working together to make software better, and the Foundation exists to empower and support those people to do their best work. This is an important chapter in Rust's history, and I'm excited to be a part of it.</p>\n",
      "date_published": "2021-03-18T00:00:00Z"
    },{
      "id": "https://foundation.rust-lang.org/posts/2021-02-08-hello-world/",
      "url": "https://foundation.rust-lang.org/posts/2021-02-08-hello-world/",
      "title": "Hello World!",
      "content_html": "<p>Today, on behalf of the Rust Core team, I’m excited to announce the Rust Foundation, a new independent non-profit organization to steward the Rust programming language and ecosystem, with a unique focus on supporting the set of maintainers that govern and develop the project. The Rust Foundation will hold its first board meeting tomorrow, February 9th, at 4pm CT. <a href=\"/board/\">The board of directors is composed of 5 directors from our Founding member companies, AWS, Huawei, Google, Microsoft, and Mozilla, as well as 5 directors from project leadership, 2 representing the Core Team, as well as 3 project areas: Reliability, Quality, and Collaboration. </a></p>\n<p>This marks a huge step in the growth of Rust on several axes; not the least of which, a formal, financial commitment from a set of global industry leading companies, heralding Rust’s arrival as an enterprise production-ready technology. I am personally moved, and motivated, by the sense of responsibility that comes from this commitment. Our founding sponsors’ eager and enthusiastic participation is not only a promise to maintain and sustain Rust as what it is today, but an endorsement of Rust’s values and a dedication to share the responsibility of cultivating the future that Rust aspires to.</p>\n<p>Mozilla, the original home of the Rust project, has transferred all trademark and infrastructure assets, including the <a href=\"https://crates.io/\">crates.io package registry</a>, to the Rust Foundation. We’re filled with gratitude for Mozilla whose thoughtful incubation of the project from its inception as a <a href=\"https://research.mozilla.org/rust/\">research project</a> in 2010, to <a href=\"https://blog.rust-lang.org/2015/05/15/Rust-1.0.html\">establishing independent governance with the 1.0 release in 2015</a>, has led us to this moment, as we set out as a fully independent organization. Without their support, we wouldn’t find ourselves in the position we do today.</p>\n<p>Over the last decade, Rust, the programming language, has been a barrier-breaking technology- deconstructing previously assumed-immovable tradeoffs and binary oppositions. Slogans like “concurrency without data races”, “memory safety without garbage collection”, and ultimately <a href=\"https://www.youtube.com/watch?v=lO1z-7cuRYI\">“hack without fear”</a>, speak to the perspective-challenging character of Rust’s unique marriage of academic research and industry practicality. But to suggest that Rust’s impact is solely technical would be to miss a majority of the story. As a <a href=\"https://brson.github.io/fireflowers/\">flurry of blog posts</a> from <a href=\"https://medium.com/@ag_dubs/fire-flowers-and-marios-marketing-rust-996b3fdbe8f3\">community</a> <a href=\"https://graydon2.dreamwidth.org/247406.html\">leaders</a> discussed in 2016: <a href=\"https://steveklabnik.com/writing/rust-is-more-than-safety\">Rust’s product is not a programming language or a compiler</a>. Rust’s <a href=\"https://www.thefeedbackloop.xyz/safety-is-rusts-fireflower/\">product is the experience of being a Rust developer</a> and it follows that Rust’s website declares its official slogan: “A language empowering everyone to build reliable and efficient software”.</p>\n<p>However, I’ve always taken the opportunity to editorialize this with <a href=\"https://github.com/rust-lang/www.rust-lang.org/commit/f59adeb7fa645e282b2359cb7e10e331ac00d9c5\">the original version I penned in 2018</a> and recently reiterated in <a href=\"https://youtu.be/IwPRu5FhfIQ?t=2164\">my portion of the RustConf 2020 keynote</a>: “A language empowering everyone, but especially folks who thought that systems programming wasn’t for them.” One of the most powerful driving forces of the Rust project is the simultaneous belief in the power of systems programming and the commitment to ensuring that such power is wieldable by <em>everyone</em>. The accessibility at the heart of Rust’s message of empowerment has motivated every part of the project, from first class package management and developer toolchain, to the culture of excellent error messages and documentation, to international event organizers and translators, to the code of conduct and moderation team.</p>\n<p>But Rust is so much more than a programming language and a community- Rust also represents a new, radical, way to collaborate on open source projects.  The decision making power within the Rust project is uniquely delegated and distributed; with the core team holding little more privilege than other more specialized teams. Rust counts <a href=\"https://www.rust-lang.org/governance\">more than 100 team members</a> as leaders in the design and maintenance of the project, <a href=\"https://thanks.rust-lang.org/\">shepherding nearly 6000 contributors to the rust-lang/rust repo alone since the project’s first release</a>. Through <a href=\"https://github.com/rust-lang/rfcs\">Rust’s RFC process</a>, more than 1000 people have made nearly 500 decisions that represent the most <a href=\"https://github.com/rust-lang/rfcs#when-you-need-to-follow-this-process\">critical and strategic product and design decisions for the project</a>. Guiding principles like <a href=\"http://aturon.github.io/tech/2018/05/25/listening-part-1/#the-great-int-debate-and-the-no-new-rationale-rule\">“no new rationale”</a> ensure that these conversations happen fully in the open, giving operational teeth to the fundamental beliefs of the project: that a <a href=\"http://smallcultfollowing.com/babysteps/blog/2020/12/30/the-more-things-change/#on-pluralism-and-the-rust-organization\">plurality of voices</a> is better than one; that <a href=\"https://youtu.be/JLstJFvdl4s?t=1808\">collaboration is not zero-sum</a>; that we are stronger, and smarter, as a group than alone.</p>\n<p>Rust believes that the ability of anyone to participate in the design and development of Rust is a mission critical aspect of building a language and ecosystem that is truly accessible to everyone. And the potential of such a system has bore fruit: It is not a mistake that such a promising technology has emerged from such a progressive conception of collaboration. But such a system comes at a cost; a cost that is too often invisible and thus unaccounted for. For too long, open source as both an industry and a community has done a poor audit of its expenses. Notably, ignoring the price of what I’d controversially argue is the core value proposition of open source software: the freedom to collaborate.</p>\n<p>Starting several decades ago, open source foundations were established to cultivate the use of open source software in commercial organizations large and small. Today, as we announce the Rust Foundation, we build on the incredible success of their mission: We no longer need to evangelize the use of open source software to the largest and most influential players in our industry; we can assume it. Our challenge is a new one, one that emerges from that accomplishment- we need to support and prepare our maintainers and open governance structures to support what promises to be a period of record breaking growth and adoption. The Rust Foundation seeks to center and stabilize the experiences of the amazing people who are responsible for making Rust what it is today, and to generalize and establish a healthier maintainer experience and ecology.</p>\n<p>Today is an incredibly exciting moment for Rust. I wrote my first (still publicly available) lines of Rust nearly 5 years ago and it’s amazing to see how far we have come and the promise of how far we might go. Our founding members represent a 2 year commitment to a more than million dollar yearly budget to develop services, programs, and events that will support the Rust project maintainers in building the best possible Rust, and we’ve only just begun. To learn more about the project, our organization, and becoming a member, please visit <a href=\"https://foundation.rust-lang.org\">foundation.rust-lang.org</a>.</p>\n",
      "date_published": "2021-02-08T00:00:00Z"
    }
  ]
}
